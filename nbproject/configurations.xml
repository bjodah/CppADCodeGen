<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="79">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df name="CppADCodeGen" root=".">
      <df name="bin">
      </df>
      <df name="cppad">
        <df name="local">
          <df name="code_gen">
            <in>abs_op.hpp</in>
            <in>acos_op.hpp</in>
            <in>ad_code_gen_name_provider.hpp</in>
            <in>ad_fun_code_gen.hpp</in>
            <in>add_op.hpp</in>
            <in>asin_op.hpp</in>
            <in>atan_op.hpp</in>
            <in>comp_op.hpp</in>
            <in>cond_op.hpp</in>
            <in>cos_op.hpp</in>
            <in>cosh_op.hpp</in>
            <in>discrete_op.hpp</in>
            <in>div_op.hpp</in>
            <in>exp_op.hpp</in>
            <in>forward_code_gen.hpp</in>
            <in>forward_code_gen_sweep.hpp</in>
            <in>log_op.hpp</in>
            <in>mul_op.hpp</in>
            <in>op.hpp</in>
            <in>parameter_op.hpp</in>
            <in>pow_op.hpp</in>
            <in>print_op.hpp</in>
            <in>sin_op.hpp</in>
            <in>sinh_op.hpp</in>
            <in>sparse_jacobian.hpp</in>
            <in>sqrt_op.hpp</in>
            <in>sub_op.hpp</in>
            <in>tan_op.hpp</in>
            <in>tanh_op.hpp</in>
          </df>
          <in>abort_recording.hpp</in>
          <in>abs.hpp</in>
          <in>abs_op.hpp</in>
          <in>acos_op.hpp</in>
          <in>ad.hpp</in>
          <in>ad_binary.hpp</in>
          <in>ad_copy.hpp</in>
          <in>ad_fun.hpp</in>
          <in>ad_tape.hpp</in>
          <in>ad_valued.hpp</in>
          <in>add.hpp</in>
          <in>add_eq.hpp</in>
          <in>add_op.hpp</in>
          <in>arithmetic.hpp</in>
          <in>asin_op.hpp</in>
          <in>atan2.hpp</in>
          <in>atan_op.hpp</in>
          <in>base_complex.hpp</in>
          <in>base_cond_exp.hpp</in>
          <in>base_double.hpp</in>
          <in>base_float.hpp</in>
          <in>base_std_math.hpp</in>
          <in>bender_quad.hpp</in>
          <in>bool_fun.hpp</in>
          <in>bool_valued.hpp</in>
          <in>cap_taylor.hpp</in>
          <in>comp_op.hpp</in>
          <in>compare.hpp</in>
          <in>compute_assign.hpp</in>
          <in>cond_exp.hpp</in>
          <in>cond_op.hpp</in>
          <in>convert.hpp</in>
          <in>cos_op.hpp</in>
          <in>cosh_op.hpp</in>
          <in>cppad_assert.hpp</in>
          <in>csum_op.hpp</in>
          <in>declare_ad.hpp</in>
          <in>default.hpp</in>
          <in>define.hpp</in>
          <in>dependent.hpp</in>
          <in>discrete.hpp</in>
          <in>discrete_op.hpp</in>
          <in>div.hpp</in>
          <in>div_eq.hpp</in>
          <in>div_op.hpp</in>
          <in>drivers.hpp</in>
          <in>epsilon.hpp</in>
          <in>equal_op_seq.hpp</in>
          <in>erf.hpp</in>
          <in>exp_op.hpp</in>
          <in>for_jac_sweep.hpp</in>
          <in>for_one.hpp</in>
          <in>for_sparse_jac.hpp</in>
          <in>for_two.hpp</in>
          <in>forward.hpp</in>
          <in>forward0sweep.hpp</in>
          <in>forward_sweep.hpp</in>
          <in>fun_check.hpp</in>
          <in>fun_construct.hpp</in>
          <in>fun_eval.hpp</in>
          <in>hash_code.hpp</in>
          <in>hessian.hpp</in>
          <in>identical.hpp</in>
          <in>independent.hpp</in>
          <in>integer.hpp</in>
          <in>jacobian.hpp</in>
          <in>load_op.hpp</in>
          <in>log_op.hpp</in>
          <in>lu_ratio.hpp</in>
          <in>math_other.hpp</in>
          <in>mul.hpp</in>
          <in>mul_eq.hpp</in>
          <in>mul_op.hpp</in>
          <in>near_equal_ext.hpp</in>
          <in>omp_max_thread.hpp</in>
          <in>op.hpp</in>
          <in>op_code.hpp</in>
          <in>opt_val_hes.hpp</in>
          <in>optimize.hpp</in>
          <in>ordered.hpp</in>
          <in>output.hpp</in>
          <in>par_var.hpp</in>
          <in>parallel_ad.hpp</in>
          <in>parameter_op.hpp</in>
          <in>player.hpp</in>
          <in>pod_vector.hpp</in>
          <in>pow.hpp</in>
          <in>pow_op.hpp</in>
          <in>print_for.hpp</in>
          <in>print_op.hpp</in>
          <in>prototype_op.hpp</in>
          <in>recorder.hpp</in>
          <in>rev_hes_sweep.hpp</in>
          <in>rev_jac_sweep.hpp</in>
          <in>rev_one.hpp</in>
          <in>rev_sparse_hes.hpp</in>
          <in>rev_sparse_jac.hpp</in>
          <in>rev_two.hpp</in>
          <in>reverse.hpp</in>
          <in>reverse_sweep.hpp</in>
          <in>sin_op.hpp</in>
          <in>sinh_op.hpp</in>
          <in>sparse.hpp</in>
          <in>sparse_binary_op.hpp</in>
          <in>sparse_hessian.hpp</in>
          <in>sparse_jacobian.hpp</in>
          <in>sparse_pack.hpp</in>
          <in>sparse_set.hpp</in>
          <in>sparse_unary_op.hpp</in>
          <in>sqrt_op.hpp</in>
          <in>std_math_ad.hpp</in>
          <in>std_set.hpp</in>
          <in>store_op.hpp</in>
          <in>sub.hpp</in>
          <in>sub_eq.hpp</in>
          <in>sub_op.hpp</in>
          <in>tan_op.hpp</in>
          <in>tanh_op.hpp</in>
          <in>tape_link.hpp</in>
          <in>test_vector.hpp</in>
          <in>unary_minus.hpp</in>
          <in>unary_plus.hpp</in>
          <in>undef.hpp</in>
          <in>user_ad.hpp</in>
          <in>user_atomic.hpp</in>
          <in>value.hpp</in>
          <in>var2par.hpp</in>
          <in>vec_ad.hpp</in>
        </df>
        <df name="speed">
          <in>det_33.hpp</in>
          <in>det_by_lu.hpp</in>
          <in>det_by_minor.hpp</in>
          <in>det_grad_33.hpp</in>
          <in>det_of_minor.hpp</in>
          <in>mat_sum_sq.hpp</in>
          <in>ode_evaluate.hpp</in>
          <in>sparse_evaluate.hpp</in>
          <in>uniform_01.hpp</in>
        </df>
        <in>CheckNumericType.h</in>
        <in>CheckSimpleVector.h</in>
        <in>CppAD.h</in>
        <in>CppAD_vector.h</in>
        <in>ErrorHandler.h</in>
        <in>LuFactor.h</in>
        <in>LuInvert.h</in>
        <in>LuSolve.h</in>
        <in>NearEqual.h</in>
        <in>OdeErrControl.h</in>
        <in>OdeGear.h</in>
        <in>OdeGearControl.h</in>
        <in>Poly.h</in>
        <in>PowInt.h</in>
        <in>RombergMul.h</in>
        <in>RombergOne.h</in>
        <in>Rosen34.h</in>
        <in>Runge45.h</in>
        <in>SpeedTest.h</in>
        <in>TrackNewDel.h</in>
        <in>base_require.hpp</in>
        <in>check_numeric_type.hpp</in>
        <in>check_simple_vector.hpp</in>
        <in>configure.hpp</in>
        <in>cppad.hpp</in>
        <in>cppad_code_gen.hpp</in>
        <in>elapsed_seconds.hpp</in>
        <in>error_handler.hpp</in>
        <in>lu_factor.hpp</in>
        <in>lu_invert.hpp</in>
        <in>lu_solve.hpp</in>
        <in>memory_leak.hpp</in>
        <in>nan.hpp</in>
        <in>near_equal.hpp</in>
        <in>ode_err_control.hpp</in>
        <in>ode_gear.hpp</in>
        <in>ode_gear_control.hpp</in>
        <in>omp_alloc.hpp</in>
        <in>poly.hpp</in>
        <in>pow_int.hpp</in>
        <in>romberg_mul.hpp</in>
        <in>romberg_one.hpp</in>
        <in>rosen_34.hpp</in>
        <in>runge_45.hpp</in>
        <in>speed_test.hpp</in>
        <in>thread_alloc.hpp</in>
        <in>time_test.hpp</in>
        <in>track_new_del.hpp</in>
        <in>vector.hpp</in>
      </df>
      <df name="cppad_ipopt">
        <df name="example">
          <df name=".deps">
          </df>
          <in>example.cpp</in>
          <in>get_started.cpp</in>
          <in>ode_check.cpp</in>
          <in>ode_check.hpp</in>
          <in>ode_fast.hpp</in>
          <in>ode_fast_check.cpp</in>
          <in>ode_problem.hpp</in>
          <in>ode_run.hpp</in>
          <in>ode_simple.hpp</in>
          <in>ode_simple_check.cpp</in>
        </df>
        <df name="speed">
          <df name=".deps">
          </df>
          <in>ode_speed.cpp</in>
          <in>speed.cpp</in>
        </df>
        <df name="src">
          <df name=".deps">
          </df>
          <in>cppad_ipopt_nlp.cpp</in>
          <in>cppad_ipopt_nlp.hpp</in>
          <in>fun_record.hpp</in>
          <in>hes_fg_map.cpp</in>
          <in>hes_fg_map.hpp</in>
          <in>jac_g_map.cpp</in>
          <in>jac_g_map.hpp</in>
          <in>sparse_map2vec.cpp</in>
          <in>sparse_map2vec.hpp</in>
          <in>vec_fun_pattern.cpp</in>
          <in>vec_fun_pattern.hpp</in>
        </df>
        <df name="test">
          <df name=".deps">
          </df>
          <in>k_gt_one.cpp</in>
          <in>multiple_solution.cpp</in>
          <in>retape_k1_l1.cpp</in>
          <in>retape_k1_l2.cpp</in>
          <in>test_more.cpp</in>
        </df>
      </df>
      <df name="doc">
      </df>
      <df name="example">
        <df name=".deps">
        </df>
        <in>abort_recording.cpp</in>
        <in>abs.cpp</in>
        <in>acos.cpp</in>
        <in>ad_fun.cpp</in>
        <in>ad_in_c.cpp</in>
        <in>add.cpp</in>
        <in>add_eq.cpp</in>
        <in>asin.cpp</in>
        <in>atan.cpp</in>
        <in>atan_2.cpp</in>
        <in>base_adolc.hpp</in>
        <in>bender_quad.cpp</in>
        <in>bool_fun.cpp</in>
        <in>check_numeric_type.cpp</in>
        <in>check_simple_vector.cpp</in>
        <in>checkpoint.cpp</in>
        <in>compare.cpp</in>
        <in>compare_change.cpp</in>
        <in>complex_poly.cpp</in>
        <in>cond_exp.cpp</in>
        <in>conj_grad.cpp</in>
        <in>copy_ad.cpp</in>
        <in>copy_base.cpp</in>
        <in>cos.cpp</in>
        <in>cosh.cpp</in>
        <in>cppad_vector.cpp</in>
        <in>default.cpp</in>
        <in>div.cpp</in>
        <in>div_eq.cpp</in>
        <in>epsilon.cpp</in>
        <in>eq.cpp</in>
        <in>equal_op_seq.cpp</in>
        <in>erf.cpp</in>
        <in>error_handler.cpp</in>
        <in>example.cpp</in>
        <in>exp.cpp</in>
        <in>for_one.cpp</in>
        <in>for_sparse_jac.cpp</in>
        <in>for_two.cpp</in>
        <in>forward.cpp</in>
        <in>fun_assign.cpp</in>
        <in>fun_check.cpp</in>
        <in>hes_lagrangian.cpp</in>
        <in>hes_lu_det.cpp</in>
        <in>hes_minor_det.cpp</in>
        <in>hes_times_dir.cpp</in>
        <in>hessian.cpp</in>
        <in>independent.cpp</in>
        <in>integer.cpp</in>
        <in>interface_2c.cpp</in>
        <in>interp_onetape.cpp</in>
        <in>interp_retape.cpp</in>
        <in>jac_lu_det.cpp</in>
        <in>jac_minor_det.cpp</in>
        <in>jacobian.cpp</in>
        <in>log.cpp</in>
        <in>log_10.cpp</in>
        <in>lu_factor.cpp</in>
        <in>lu_invert.cpp</in>
        <in>lu_ratio.cpp</in>
        <in>lu_solve.cpp</in>
        <in>lu_vec_ad.cpp</in>
        <in>lu_vec_ad.hpp</in>
        <in>lu_vec_ad_ok.cpp</in>
        <in>mat_mul.cpp</in>
        <in>mat_mul.hpp</in>
        <in>mul.cpp</in>
        <in>mul_eq.cpp</in>
        <in>mul_level.cpp</in>
        <in>mul_level_adolc.cpp</in>
        <in>nan.cpp</in>
        <in>near_equal.cpp</in>
        <in>near_equal_ext.cpp</in>
        <in>not_complex_ad.cpp</in>
        <in>numeric_type.cpp</in>
        <in>ode_err_control.cpp</in>
        <in>ode_err_maxabs.cpp</in>
        <in>ode_gear.cpp</in>
        <in>ode_gear_control.cpp</in>
        <in>ode_stiff.cpp</in>
        <in>ode_taylor.cpp</in>
        <in>ode_taylor_adolc.cpp</in>
        <in>omp_alloc.cpp</in>
        <in>opt_val_hes.cpp</in>
        <in>optimize.cpp</in>
        <in>output.cpp</in>
        <in>par_var.cpp</in>
        <in>poly.cpp</in>
        <in>pow.cpp</in>
        <in>pow_int.cpp</in>
        <in>print_for.cpp</in>
        <in>rev_one.cpp</in>
        <in>rev_sparse_hes.cpp</in>
        <in>rev_sparse_jac.cpp</in>
        <in>rev_two.cpp</in>
        <in>reverse_any.cpp</in>
        <in>reverse_one.cpp</in>
        <in>reverse_three.cpp</in>
        <in>reverse_two.cpp</in>
        <in>romberg_mul.cpp</in>
        <in>romberg_one.cpp</in>
        <in>rosen_34.cpp</in>
        <in>runge_45_1.cpp</in>
        <in>runge_45_2.cpp</in>
        <in>seq_property.cpp</in>
        <in>simple_vector.cpp</in>
        <in>sin.cpp</in>
        <in>sinh.cpp</in>
        <in>sparse_hessian.cpp</in>
        <in>sparse_jacobian.cpp</in>
        <in>sqrt.cpp</in>
        <in>stack_machine.cpp</in>
        <in>sub.cpp</in>
        <in>sub_eq.cpp</in>
        <in>tan.cpp</in>
        <in>tanh.cpp</in>
        <in>tape_index.cpp</in>
        <in>thread_alloc.cpp</in>
        <in>unary_minus.cpp</in>
        <in>unary_plus.cpp</in>
        <in>user_tan.cpp</in>
        <in>value.cpp</in>
        <in>var_2par.cpp</in>
        <in>vec_ad.cpp</in>
        <in>vector_bool.cpp</in>
      </df>
      <df name="introduction">
        <df name="exp_apx">
          <df name=".deps">
          </df>
          <in>exp_2.cpp</in>
          <in>exp_2.hpp</in>
          <in>exp_2_cppad.cpp</in>
          <in>exp_2_for0.cpp</in>
          <in>exp_2_for1.cpp</in>
          <in>exp_2_for2.cpp</in>
          <in>exp_2_rev1.cpp</in>
          <in>exp_2_rev2.cpp</in>
          <in>exp_eps.cpp</in>
          <in>exp_eps.hpp</in>
          <in>exp_eps_cppad.cpp</in>
          <in>exp_eps_for0.cpp</in>
          <in>exp_eps_for1.cpp</in>
          <in>exp_eps_for2.cpp</in>
          <in>exp_eps_rev1.cpp</in>
          <in>exp_eps_rev2.cpp</in>
          <in>main.cpp</in>
        </df>
        <df name="get_started">
          <df name=".deps">
          </df>
          <in>get_started.cpp</in>
        </df>
      </df>
      <df name="multi_thread">
        <df name="bthread">
          <in>a11c_bthread.cpp</in>
          <in>team_bthread.cpp</in>
        </df>
        <df name="openmp">
          <in>a11c_openmp.cpp</in>
          <in>team_openmp.cpp</in>
        </df>
        <df name="pthread">
          <in>a11c_pthread.cpp</in>
          <in>team_pthread.cpp</in>
        </df>
        <in>arc_tan.cpp</in>
        <in>arc_tan.hpp</in>
        <in>harmonic.cpp</in>
        <in>harmonic.hpp</in>
        <in>harmonic_time.cpp</in>
        <in>harmonic_time.hpp</in>
        <in>harmonic_work.cpp</in>
        <in>harmonic_work.hpp</in>
        <in>multi_newton.cpp</in>
        <in>multi_newton.hpp</in>
        <in>multi_newton_time.cpp</in>
        <in>multi_newton_time.hpp</in>
        <in>multi_newton_work.cpp</in>
        <in>multi_newton_work.hpp</in>
        <in>simple_ad.cpp</in>
        <in>simple_ad.hpp</in>
        <in>team_thread.hpp</in>
        <in>thread_test.cpp</in>
      </df>
      <df name="omh">
      </df>
      <df name="pkgconfig">
      </df>
      <df name="print_for">
        <df name=".deps">
        </df>
        <in>print_for.cpp</in>
      </df>
      <df name="speed">
        <df name="adolc">
          <df name=".deps">
          </df>
          <in>det_lu.cpp</in>
          <in>det_minor.cpp</in>
          <in>mat_mul.cpp</in>
          <in>ode.cpp</in>
          <in>poly.cpp</in>
          <in>sparse_hessian.cpp</in>
          <in>sparse_jacobian.cpp</in>
        </df>
        <df name="cppad">
          <df name=".deps">
          </df>
          <in>det_lu.cpp</in>
          <in>det_minor.cpp</in>
          <in>mat_mul.cpp</in>
          <in>ode.cpp</in>
          <in>poly.cpp</in>
          <in>sparse_hessian.cpp</in>
          <in>sparse_jacobian.cpp</in>
        </df>
        <df name="double">
          <df name=".deps">
          </df>
          <in>det_lu.cpp</in>
          <in>det_minor.cpp</in>
          <in>mat_mul.cpp</in>
          <in>ode.cpp</in>
          <in>poly.cpp</in>
          <in>sparse_hessian.cpp</in>
          <in>sparse_jacobian.cpp</in>
        </df>
        <df name="example">
          <df name=".deps">
          </df>
          <in>det_by_lu.cpp</in>
          <in>det_by_minor.cpp</in>
          <in>det_of_minor.cpp</in>
          <in>elapsed_seconds.cpp</in>
          <in>example.cpp</in>
          <in>mat_sum_sq.cpp</in>
          <in>ode_evaluate.cpp</in>
          <in>sparse_evaluate.cpp</in>
          <in>speed_program.cpp</in>
          <in>speed_test.cpp</in>
          <in>time_test.cpp</in>
        </df>
        <df name="fadbad">
          <df name=".deps">
          </df>
          <in>det_lu.cpp</in>
          <in>det_minor.cpp</in>
          <in>mat_mul.cpp</in>
          <in>ode.cpp</in>
          <in>poly.cpp</in>
          <in>sparse_hessian.cpp</in>
          <in>sparse_jacobian.cpp</in>
        </df>
        <df name="profile">
          <df name=".deps">
          </df>
        </df>
        <df name="sacado">
          <df name=".deps">
          </df>
          <in>det_lu.cpp</in>
          <in>det_minor.cpp</in>
          <in>mat_mul.cpp</in>
          <in>ode.cpp</in>
          <in>poly.cpp</in>
          <in>sparse_hessian.cpp</in>
          <in>sparse_jacobian.cpp</in>
        </df>
        <df name="src">
          <df name=".deps">
          </df>
          <in>link_det_lu.cpp</in>
          <in>link_det_minor.cpp</in>
          <in>link_mat_mul.cpp</in>
          <in>link_ode.cpp</in>
          <in>link_poly.cpp</in>
          <in>link_sparse_hessian.cpp</in>
          <in>link_sparse_jacobian.cpp</in>
          <in>microsoft_timer.cpp</in>
        </df>
        <in>main.cpp</in>
      </df>
      <df name="test_code_gen">
        <df name=".deps">
        </df>
        <df name="tmp">
        </df>
        <in>TestException.cpp</in>
        <in>TestException.hpp</in>
        <in>abs.cpp</in>
        <in>acos.cpp</in>
        <in>add.cpp</in>
        <in>asin.cpp</in>
        <in>atan.cpp</in>
        <in>atan_2.cpp</in>
        <in>compare_change.cpp</in>
        <in>cond_exp.cpp</in>
        <in>cos.cpp</in>
        <in>cosh.cpp</in>
        <in>div.cpp</in>
        <in>exp.cpp</in>
        <in>gcc_load_dynamic.cpp</in>
        <in>gcc_load_dynamic.hpp</in>
        <in>log.cpp</in>
        <in>log_10.cpp</in>
        <in>mul.cpp</in>
        <in>parameter.cpp</in>
        <in>pow.cpp</in>
        <in>sin.cpp</in>
        <in>sub.cpp</in>
        <in>tan.cpp</in>
        <in>test_code_gen.cpp</in>
        <in>tmpTest.c</in>
      </df>
      <df name="test_more">
        <df name=".deps">
        </df>
        <in>abs.cpp</in>
        <in>acos.cpp</in>
        <in>add.cpp</in>
        <in>add_eq.cpp</in>
        <in>add_zero.cpp</in>
        <in>asin.cpp</in>
        <in>atan.cpp</in>
        <in>atan_2.cpp</in>
        <in>base_adolc.cpp</in>
        <in>check_simple_vector.cpp</in>
        <in>compare.cpp</in>
        <in>compare_change.cpp</in>
        <in>cond_exp.cpp</in>
        <in>cond_exp_ad.cpp</in>
        <in>copy.cpp</in>
        <in>cos.cpp</in>
        <in>cosh.cpp</in>
        <in>dbl_epsilon.cpp</in>
        <in>div.cpp</in>
        <in>div_eq.cpp</in>
        <in>div_zero_one.cpp</in>
        <in>erf.cpp</in>
        <in>exp.cpp</in>
        <in>for_hess.cpp</in>
        <in>for_sparse_jac.cpp</in>
        <in>forward.cpp</in>
        <in>from_base.cpp</in>
        <in>fun_check.cpp</in>
        <in>jacobian.cpp</in>
        <in>log.cpp</in>
        <in>log_10.cpp</in>
        <in>mul.cpp</in>
        <in>mul_eq.cpp</in>
        <in>mul_level.cpp</in>
        <in>mul_zero_one.cpp</in>
        <in>ndebug.cpp</in>
        <in>near_equal_ext.cpp</in>
        <in>neg.cpp</in>
        <in>ode_err_control.cpp</in>
        <in>optimize.cpp</in>
        <in>parameter.cpp</in>
        <in>poly.cpp</in>
        <in>pow.cpp</in>
        <in>pow_int.cpp</in>
        <in>print_for.cpp</in>
        <in>rev_sparse_hes.cpp</in>
        <in>rev_sparse_jac.cpp</in>
        <in>rev_two.cpp</in>
        <in>reverse.cpp</in>
        <in>romberg_one.cpp</in>
        <in>rosen_34.cpp</in>
        <in>runge_45.cpp</in>
        <in>simple_vector.cpp</in>
        <in>sin.cpp</in>
        <in>sin_cos.cpp</in>
        <in>sinh.cpp</in>
        <in>sparse_hessian.cpp</in>
        <in>sparse_jacobian.cpp</in>
        <in>sparse_vec_ad.cpp</in>
        <in>sqrt.cpp</in>
        <in>std_math.cpp</in>
        <in>sub.cpp</in>
        <in>sub_eq.cpp</in>
        <in>sub_zero.cpp</in>
        <in>tan.cpp</in>
        <in>test_more.cpp</in>
        <in>track_new_del.cpp</in>
        <in>value.cpp</in>
        <in>vec_ad.cpp</in>
        <in>vec_ad_par.cpp</in>
        <in>vec_unary.cpp</in>
      </df>
    </df>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
      <itemPath>configure</itemPath>
    </logicalFolder>
  </logicalFolder>
  <sourceFolderFilter>^(nbproject)$</sourceFolderFilter>
  <sourceRootList>
    <Elem>.</Elem>
  </sourceRootList>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
        <compilerSet>default</compilerSet>
      </toolsSet>
      <makefileType>
        <makeTool>
          <buildCommandWorkingDir>.</buildCommandWorkingDir>
          <buildCommand>${MAKE} -f Makefile</buildCommand>
          <cleanCommand>${MAKE} -f Makefile clean</cleanCommand>
          <executablePath></executablePath>
        </makeTool>
      </makefileType>
    </conf>
  </confs>
</configurationDescriptor>
