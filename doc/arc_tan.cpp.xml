<?xml version='1.0'?>
<?xml-stylesheet type='text/xsl' href='pmathml.xsl'?>
<html xmlns='http://www.w3.org/1999/xhtml'>
<head>
<title>Two Argument Inverse Tangent Function</title>
<meta name="description" id="description" content="Two Argument Inverse Tangent Function"/>
<meta name="keywords" id="keywords" content=" arc_tan multi_thread example "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_arc_tan.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="simple_ad.cpp.xml" target="_top">Prev</a>
</td><td><a href="harmonic.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>multi_thread</option>
<option>simple_ad.cpp</option>
<option>arc_tan.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>multi_thread</option>
<option>library</option>
<option>cppad_ipopt_nlp</option>
<option>Example</option>
<option>preprocessor</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>multi_thread-&gt;</option>
<option>parallel_ad</option>
<option>team_thread.hpp</option>
<option>thread_test.cpp</option>
<option>simple_ad.cpp</option>
<option>harmonic.cpp</option>
<option>multi_newton.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>simple_ad.cpp-&gt;</option>
<option>arc_tan.cpp</option>
</select>
</td>
<td>arc_tan.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>y</option>
<option>x</option>
<option>theta</option>
<option>Operation Sequence</option>
<option>Example</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br/>







<center><b><big><big>Two Argument Inverse Tangent Function</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><i><font color="black"><span style='white-space: nowrap'>theta</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;arc_tan(</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br/>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
Determines an angle 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003B8;</mi>
<mo stretchy="false">&#x02208;</mo>
<mo stretchy="false">[</mo>
<mo stretchy="false">-</mo>
<mi mathvariant='normal'>&#x003C0;</mi>
<mo stretchy="false">,</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x003C0;</mi>
<mo stretchy="false">]</mo>
</mrow></math>


such that 

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="right" >
<mi>sin</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B8;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mi mathvariant='italic'>y</mi>
<mo stretchy="false">/</mo>
<msqrt><mrow><msup><mi mathvariant='italic'>x</mi>
<mn>2</mn>
</msup>
<mo stretchy="false">+</mo>
<msup><mi mathvariant='italic'>y</mi>
<mn>2</mn>
</msup>
</mrow>
</msqrt>
</mtd></mtr><mtr><mtd columnalign="right" >
<mi>cos</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='normal'>&#x003B8;</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="center" >
<mo stretchy="false">=</mo>
</mtd><mtd columnalign="left" >
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">/</mo>
<msqrt><mrow><msup><mi mathvariant='italic'>x</mi>
<mn>2</mn>
</msup>
<mo stretchy="false">+</mo>
<msup><mi mathvariant='italic'>y</mi>
<mn>2</mn>
</msup>
</mrow>
</msqrt>
</mtd></mtr></mtable>
</mrow></math>

<br/>
<b><big><a name="y" id="y">y</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 has one of the following prototypes

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;AD&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
<br/>
<b><big><a name="x" id="x">x</a></big></b>
<br/>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has one of the following prototypes

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;AD&lt;double&gt;&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
<br/>
<b><big><a name="theta" id="theta">theta</a></big></b>
<br/>
The result 
<code><i><font color="black"><span style='white-space: nowrap'>theta</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;double&gt;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>theta</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
<br/>
<b><big><a name="Operation Sequence" id="Operation Sequence">Operation Sequence</a></big></b>
<br/>
The operation sequence for this function depends on the value of

<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
.
For a version of this function where the operation sequence does
not depend on 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 or 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
; see <a href="atan2.xml" target="_top"><span style='white-space: nowrap'>atan2</span></a>
.

<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
This function is used by the <a href="simple_ad.cpp.xml" target="_top"><span style='white-space: nowrap'>simple_ad.cpp</span></a>
 example.

<br/>
<br/>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>

<code><font color="blue">
<br/>
<pre style='display:inline'> 
CppAD::<a href="ad.xml" target="_top">AD</a>&lt;double&gt; 
arc_tan(const CppAD::<a href="ad.xml" target="_top">AD</a>&lt;double&gt;&amp; x, const CppAD::<a href="ad.xml" target="_top">AD</a>&lt;double&gt;&amp; y)
{	using CppAD::AD;

	double pi  = 4. * atan(1.);
	<a href="ad.xml" target="_top">AD</a>&lt;double&gt; theta;

	// valid for first quadrant 
	if( abs(x) &gt; abs(y) )
		theta = atan(abs(y) / abs(x));
	else	theta = pi / 2. - atan(abs(x) / abs(y) ) ;

	// valid for first or second quadrant
	if( x &lt; 0. )
		theta = pi - theta;

	// valid for any quadrant
	if( y &lt; 0. )
		theta = - theta;

	return theta;
}</pre>
</font></code>


<hr/>Input File: multi_thread/arc_tan.cpp

</body>
</html>
